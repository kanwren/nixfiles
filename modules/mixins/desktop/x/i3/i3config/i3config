# vim: set ft=i3 foldmethod=marker:

# startup programs {{{
    exec --no-startup-id compton
    exec --no-startup-id copyq
    exec --no-startup-id nm-applet
    exec --no-startup-id blueman-applet
    exec --no-startup-id mate-volume-control-status-icon
    exec --no-startup-id ibus-daemon --daemonize --replace
# }}}

# i3 config {{{
    set $mod Mod4

    # use Mouse+$mod to drag floating windows to their wanted position
    floating_modifier $mod

    # This font is widely installed, provides lots of unicode glyphs,
    # right-to-left text rendering and scalability on retina/hidpi displays
    # (thanks to pango).
    font pango:DejaVu Sans Mono 12

    # window settings
    for_window [class=".*"] border pixel 1
    # requires i3-gaps
    hide_edge_borders both
    gaps inner 10
    gaps outer 10
# }}}

# control bindings {{{
    # run i3 commands on the fly
    bindsym $mod+i exec i3-input -f pango:monospace 12

    # volume controls (requires pulseaudio)
    bindsym XF86AudioRaiseVolume exec --no-startup-id pactl -- set-sink-volume @DEFAULT_SINK@ +5%    # Increase sound volume
    bindsym XF86AudioLowerVolume exec --no-startup-id pactl -- set-sink-volume @DEFAULT_SINK@ -5%    # Decrease sound volume
    bindsym XF86AudioMute        exec --no-startup-id pactl    set-sink-mute   @DEFAULT_SINK@ toggle # Mute sound

    # brightness controls (requires xbacklight or acpibacklight)
    bindsym XF86MonBrightnessDown exec xbacklight -dec 5
    bindsym XF86MonBrightnessUp   exec xbacklight -inc 5

    # media player controls (requires playerctl)
    bindsym XF86AudioPlay  exec playerctl play-pause
    bindsym XF86AudioPause exec playerctl pause
    bindsym XF86AudioNext  exec playerctl next
    bindsym XF86AudioPrev  exec playerctl previous

    bindsym --release XF86PowerOff mode "system"
# }}}

# program launching {{{
    # lock screen
    bindsym $mod+Shift+i exec betterlockscreen -l dimblur
    bindsym $mod+Shift+o exec betterlockscreen -s dimblur

    # program launcher
    bindsym $mod+Shift+Return exec "rofi -modi drun,run,ssh -show drun -fuzzy"
    # switch windows
    bindsym $mod+Shift+w exec "rofi -show window"

    # screenshot
    bindsym Print exec flameshot gui

    # graphical calculator
    bindsym XF86Calculator exec qalculate-gtk

    # terminal
    bindsym $mod+Return exec kitty
    # browser
    bindsym $mod+b exec firefox
    bindsym $mod+Shift+b exec firefox --private-window
    # clipboard manager
    bindsym $mod+n exec copyq show

    # quicklaunch {{{
        bindsym $mod+v mode "quicklaunch"
        mode "quicklaunch" {
            bindsym x exec xterm;                mode "default"
            bindsym v exec kitty vim;            mode "default"
            bindsym b exec firefox;              mode "default"
            bindsym f exec thunar;               mode "default"
            bindsym d exec Discord;              mode "default"
            bindsym l exec slack;                mode "default"
            bindsym s exec spotify;              mode "default"
            bindsym p exec bitwarden;            mode "default"
            bindsym g exec "@pick_game_script@"; mode "default"
            bindsym Escape mode "default"
        }
    # }}}
# }}}

# quick commands {{{
    bindsym $mod+c mode "quickcommand"
    mode "quickcommand" {
        bindsym a mode "audio"
        bindsym m mode "mons"
        bindsym k mode "kbmap"
        bindsym i mode "system"
        bindsym d mode "dunst"
        bindsym Escape mode "default"
    }
    mode "audio" {
        bindsym m exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle; mode "default"
        bindsym Escape mode "default"
    }
    mode "mons" {
        bindsym o exec mons -o;        mode "default"
        bindsym s exec mons -s;        mode "default"
        bindsym t exec mons -e top;    mode "default"
        bindsym l exec mons -e left;   mode "default"
        bindsym r exec mons -e right;  mode "default"
        bindsym b exec mons -e bottom; mode "default"
        bindsym Escape mode "default"
    }
    mode "system" {
        bindsym r               restart;                mode "default"
        bindsym Shift+e         exit;                   mode "default"
        bindsym Control+Shift+s exec shutdown now;      mode "default"
        bindsym Control+Shift+r exec shutdown -r now;   mode "default"
        bindsym Escape mode "default"
    }
    mode "dunst" {
        bindsym t exec dunstctl set-paused toggle; mode "default"
        bindsym p exec dunstctl set-paused true;   mode "default"
        bindsym u exec dunstctl set-paused false;  mode "default"
        bindsym q exec "if s=\\"$(dunstctl is-paused)\\"; then notify-send \\"dunst is $([ \\"$s\\" = \\"false\\" ] && echo \\"un\\")paused\\"; else notify-send \\"error querying dunst status\\"; fi";  mode "default"
        bindsym Escape mode "default"
    }
    mode "kbmap" {
        bindsym space exec "setxkbmap -layout  us";                                        mode "default"
        bindsym 1     exec "setxkbmap -layout  us";                                        mode "default"
        bindsym 2     exec "setxkbmap -variant dvorak";                                    mode "default"
        bindsym 3     exec "setxkbmap -variant dvp";                                       mode "default"
        bindsym 4     exec "setxkbmap -variant dvorak-l";                                  mode "default"
        bindsym 5     exec "setxkbmap -variant dvorak-r";                                  mode "default"
        bindsym 6     exec "setxkbmap -variant colemak";                                   mode "default"
        bindsym 7     exec "setxkbmap -layout us,apl -variant ,dyalog -option grp:switch"; mode "default"

        bindsym Escape mode "default"
    }
# }}}

# special window handling {{{
    # floating {{{
        for_window [class="^Thunar$"] floating enable

        for_window [class="^Qalculate-gtk$"] floating enable

        no_focus [title="Microsoft Teams Notification"]
        for_window [title="Microsoft Teams Notification"] floating enable

        for_window [class="^copyq$"] floating enable
    # }}}

    # automatic marks {{{
        for_window [class="^discord$"] mark d
        for_window [class="^Slack$"] mark l
        for_window [class="^Spotify$"] mark s
        for_window [class="^Bitwarden$"] mark p
    # }}}
# }}}

# window management bindings {{{
    # kill focused window
    bindsym $mod+Shift+q kill

    # change focus {{{
        # note: shifted to the vim bindings instead of the default j/k/l/;
        bindsym $mod+h focus left
        bindsym $mod+j focus down
        bindsym $mod+k focus up
        bindsym $mod+l focus right
    # }}}

    # moving {{{
        bindsym $mod+Shift+h move left
        bindsym $mod+Shift+j move down
        bindsym $mod+Shift+k move up
        bindsym $mod+Shift+l move right
        bindsym $mod+Control+Shift+h move left 80 px
        bindsym $mod+Control+Shift+j move down 80 px
        bindsym $mod+Control+Shift+k move up 80 px
        bindsym $mod+Control+Shift+l move right 80 px
    # }}}

    # resizing {{{
        # resize window (can also $mod+rclick drag)
        bindsym $mod+r mode "resize"
        mode "resize" {
            bindsym h resize shrink width 10 px or 1 ppt
            bindsym j resize grow height 10 px or 1 ppt
            bindsym k resize shrink height 10 px or 1 ppt
            bindsym l resize grow width 10 px or 1 ppt

            bindsym Shift+h resize shrink width 50 px or 5 ppt
            bindsym Shift+j resize grow height 50 px or 5 ppt
            bindsym Shift+k resize shrink height 50 px or 5 ppt
            bindsym Shift+l resize grow width 50 px or 5 ppt

            bindsym Control+Shift+h resize shrink width 150 px or 15 ppt
            bindsym Control+Shift+j resize grow height 150 px or 15 ppt
            bindsym Control+Shift+k resize shrink height 150 px or 15 ppt
            bindsym Control+Shift+l resize grow width 150 px or 15 ppt

            bindsym Escape mode "default"
        }
    # }}}

    # container layouts {{{
        # horizontal split (windows split vertically)
        bindsym $mod+Shift+minus split v
        # vertical split (windows split horizontally)
        bindsym $mod+Shift+backslash split h

        bindsym $mod+s layout stacking
        bindsym $mod+w layout tabbed
        bindsym $mod+e layout toggle split
    # }}}

    # parent/child {{{
        # focus the parent container
        bindsym $mod+p focus parent

        # focus the child container
        bindsym $mod+Shift+p focus child
    # }}}

    # floating {{{
        # toggle
        bindsym $mod+Shift+space floating toggle
        bindsym --whole-window $mod+button2 floating toggle
        # change focus between tiling/floating windows
        bindsym $mod+space focus mode_toggle
    # }}}

    # other toggles {{{
        bindsym $mod+f fullscreen toggle
        bindsym $mod+y sticky toggle
    # }}}

    # scratchpad {{{
        bindsym $mod+Shift+BackSpace move scratchpad
        bindsym $mod+backslash scratchpad show
    # }}}

    # spilling {{{
        # spill a window into its parent container
        bindsym $mod+d exec "@spill_container_script@ single"
        # spill all windows in the selected container into their parent container
        bindsym $mod+Shift+d exec "@spill_container_script@ multi"
    # }}}

    # swapping {{{
        bindsym $mod+bracketleft mark --add swapee
        bindsym $mod+bracketright swap container with mark swapee; unmark swapee
    # }}}

    # marks {{{
        # read 1 character and mark the current window with this character
        bindsym $mod+m exec i3-input -F 'mark --add %s' -l 1 -P 'mark: '
        bindsym $mod+Shift+m exec i3-input -F 'unmark %s' -l 1 -P 'mark: '
        bindsym $mod+Control+Shift+m unmark
        # read 1 character and go to the window with the character
        bindsym $mod+g exec i3-input -F '[con_mark="%s"] focus' -l 1 -P 'goto: '
    # }}}
# }}}

# workspace management {{{
    # define names for default workspaces for which we configure key bindings later on.
    set $ws1  "1"
    set $ws2  "2"
    set $ws3  "3"
    set $ws4  "4"
    set $ws5  "5"
    set $ws6  "6"
    set $ws7  "7"
    set $ws8  "8"
    set $ws9  "9"
    set $ws10 "10"

    # move workspace across displays
    bindsym $mod+Control+h move workspace to output left
    bindsym $mod+Control+j move workspace to output down
    bindsym $mod+Control+k move workspace to output up
    bindsym $mod+Control+l move workspace to output right

    # switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10

    # cycling workspaces
    bindsym $mod+Left  workspace prev
    bindsym $mod+Right workspace next
    bindsym $mod+Tab   workspace back_and_forth

    # move container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9
    bindsym $mod+Shift+0 move container to workspace $ws10

    # move container to workspace and switch to it
    bindsym $mod+Control+Shift+1 move container to workspace $ws1;  workspace $ws1
    bindsym $mod+Control+Shift+2 move container to workspace $ws2;  workspace $ws2
    bindsym $mod+Control+Shift+3 move container to workspace $ws3;  workspace $ws3
    bindsym $mod+Control+Shift+4 move container to workspace $ws4;  workspace $ws4
    bindsym $mod+Control+Shift+5 move container to workspace $ws5;  workspace $ws5
    bindsym $mod+Control+Shift+6 move container to workspace $ws6;  workspace $ws6
    bindsym $mod+Control+Shift+7 move container to workspace $ws7;  workspace $ws7
    bindsym $mod+Control+Shift+8 move container to workspace $ws8;  workspace $ws8
    bindsym $mod+Control+Shift+9 move container to workspace $ws9;  workspace $ws9
    bindsym $mod+Control+Shift+0 move container to workspace $ws10; workspace $ws10
# }}}

# bar {{{
    bar {
        status_command i3status
        hidden_state hide
        mode dock
        modifier $mod
    }

    bindsym $mod+u bar mode toggle
    bindsym $mod+Shift+u bar mode invisible
    bindsym $mod+Control+Shift+u bar hidden_state toggle
# }}}

exec sh ~/.fehbg
